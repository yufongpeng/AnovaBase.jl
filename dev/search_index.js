var documenterSearchIndex = {"docs":
[{"location":"AnovaFixedEffectModels/#AnovaFixedEffectModels.jl","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.jl","text":"","category":"section"},{"location":"AnovaFixedEffectModels/","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.jl","text":"CurrentModule = AnovaFixedEffectModels","category":"page"},{"location":"AnovaFixedEffectModels/","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.jl","text":"Modules = [AnovaFixedEffectModels]","category":"page"},{"location":"AnovaFixedEffectModels/#ANOVA","page":"AnovaFixedEffectModels.jl","title":"ANOVA","text":"","category":"section"},{"location":"AnovaFixedEffectModels/","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.jl","text":"AnovaFixedEffectModels.anova(::Val{:AnovaFixedEffectModels})\nanova_lfe","category":"page"},{"location":"AnovaFixedEffectModels/#AnovaBase.anova-Tuple{Val{:AnovaFixedEffectModels}}","page":"AnovaFixedEffectModels.jl","title":"AnovaBase.anova","text":"anova(<models>...; test::Type{<: GoodnessOfFit})\nanova(test::Type{<: GoodnessOfFit}, <models>...;  <keyword arguments>)\n\nAnalysis of variance.\n\nReturn AnovaResult{M, test, N}.\n\nmodels: model objects\nTableRegressionModel{<: FixedEffectModel} fitted by AnovaFixedEffectModels.lfe.\nIf mutiple models are provided, they should be nested and the last one is the most saturated.\ntest: test statistics for goodness of fit. The default is based on the model type.\nTableRegressionModel{<: FixedEffectModel}: FTest.\n\nOther keyword arguments:\n\nWhen one model is provided:  \ntype specifies type of anova (1 or 3). Default value is 1.\nWhen multiple models are provided:  \ncheck: allows to check if models are nested. Defalut value is true. Some checkers are not implemented now.\nisnested: true when models are checked as nested (manually or automatically). Defalut value is false. \n\nAlgorithm:\n\nFor the ith model, devᵢ is defined as the sum of squared deviance residuals (unit deviance).  It is equivalent to the residual sum.\n\nThe attribute deviance is Δdevᵢ = devᵢ₋₁ - devᵢ.\n\nF-statistic is then defined as Δdevᵢ/(squared dispersion × degree of freedom).\n\nFor type I and III ANOVA, F-statistic is computed directly by the variance-covariance matrix(vcov) of the saturated model; the deviance is calculated backward.\n\nType I:\nFirst, calculate f as the upper factor of Cholesky factorization of vcov⁻¹ * β.\nFor a factor that starts at ith row/column of vcov with n degree of freedom, the f-statistic is Σᵢⁱ⁺ⁿ⁻¹ fₖ²/n.\nType III: \nFor a factor occupying ith to jth row/column of vcov with n degree of freedom, f-statistic is (β[i:j]' * vcov[i:j, i:j]⁻¹ * β[i:j])/n.\n\nFor fitting new models and conducting anova at the same time, see anova_lfe for FixedEffectModel.\n\n\n\n\n\n","category":"method"},{"location":"AnovaFixedEffectModels/#AnovaFixedEffectModels.anova_lfe","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.anova_lfe","text":"anova_lfe(f::FormulaTerm, df, vcov::CovarianceEstimator = Vcov.simple(); \n        test::Type{<: GoodnessOfFit} = FTest, <keyword arguments>)\nanova_lfe(test::Type{<: GoodnessOfFit}, f::FormulaTerm, df, vcov::CovarianceEstimator = Vcov.simple(); <keyword arguments>)\n\nANOVA for fixed-effect linear regression.\n\nvcov: estimator of covariance matrix.\ntype: type of anova (1 or 3). Default value is 1.\n\nanova_lfe generate a TableRegressionModel{<: FixedEffectModel}.\n\n\n\n\n\n","category":"function"},{"location":"AnovaFixedEffectModels/#Model-fit","page":"AnovaFixedEffectModels.jl","title":"Model fit","text":"","category":"section"},{"location":"AnovaFixedEffectModels/","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.jl","text":"lfe\nto_trm","category":"page"},{"location":"AnovaFixedEffectModels/#AnovaFixedEffectModels.lfe","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.lfe","text":"lfe(formula::FormulaTerm, df, vcov::CovarianceEstimator = Vcov.simple(); kwargs...)\n\nFit a FixedEffectModel and wrap it into TableRegressionModel. \n\nwarn: Warn\nThis function currently does not perform well. It re-compiles everytime; may be due to @nonspecialize for parameters of reg.\n\n\n\n\n\n","category":"function"},{"location":"AnovaFixedEffectModels/#AnovaFixedEffectModels.to_trm","page":"AnovaFixedEffectModels.jl","title":"AnovaFixedEffectModels.to_trm","text":"to_trm(model, df)\n\nWrap fitted FixedEffectModel into TableRegressionModel.\n\n\n\n\n\n","category":"function"},{"location":"FixedEffectModels/#AnovaFixedEffectModels","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"","category":"section"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"using AnovaFixedEffectModels, DataFrames, CSV, CategoricalArrays\ngpa = CSV.read(\"gpa.csv\", DataFrame)\ntransform!(gpa,\n        7 => x->replace(x, \"yes\" => true, \"no\" => false, \"NA\" => missing),\n        4 => x->categorical(x, levels = [\"1 hour\", \"2 hours\", \"3 hours\"], ordered = true),\n        renamecols = false)\ntransform!(gpa, [1, 2, 5, 7] .=> categorical, renamecols = false)","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"using AnovaFixedEffectModels","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"AnovaFixedEffectModels.jl supports FixedEffectModels; however, because anova relies on model schema, the output of FixedEffectModels.reg is not compatible. ","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"To solve this issue, fitting model using lfe instead of reg.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"fem1 = lfe(@formula(gpa ~ fe(student) + occasion + job), gpa)","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"If a model is already fitted by reg, use to_trm to convert it into StatsModels.TableRegressionModel.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"model = reg(gpa, @formula(gpa ~ fe(student) + occasion + job))\nfem1 = to_trm(model, gpa)\naovf = anova(fem1)","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"note: Note\nlfe is actually slower because it re-compiles every execution.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"note: Note\nOnly F-test is available for FixedEffectModel.","category":"page"},{"location":"FixedEffectModels/#Algorithm","page":"AnovaFixedEffectModels","title":"Algorithm","text":"","category":"section"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"There are vectors of models and the corresponding base models:","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"beginaligned\n    bfmodel = (model_1  model_n)\n    bfbasemodel = (basemodel_1  basemodel_n)\nendaligned","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"When m models are given, bf model = (model_2  model_m), bf basemodel = (model_1  model_m-1). ","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"When one model is given, n is the number of factors except for the factors used in the simplest model. The bf model and bf basemodel depends on the type of ANOVA.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"For the most complex model model_n, each factors are assigned a natural number f_k sequentially where f_l is the last factor.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"Let the number of columns of model matrix of model_n m.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"The included factors of model_j and basemodel_j are","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"beginaligned\n    mf_j = i in 1 m  f_i text is a factor of  model_i\n    bf_j = i in 1 m  f_i text is a factor of  basemodel_i\nendaligned","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"A map id_X 1 m mapsto 1 f_l maps the index of columns into the corresponding factors.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"We can define a vector of index sets for each model:","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"bfI = (I_1  I_n)","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"where forall i in I_k id_X(i) in mf_ksetminus bf_k.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"The deviances are:","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"beginaligned\n    bfdev = (devres_1  devres_n)\n    bfbasedev = (basedevres_1  basedevres_n)\nendaligned","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"which is equivalent to the residual sum of squares.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"The difference of bf dev and bf basedev is:","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"bfDelta dev = basedev - dev","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"The degree of freedom is:","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"bfdof = (n(I_1)  n(I_n))","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"where n(I) is the size of I","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"The rss is the residual sum of squares of basemodel_n; dof_res is the degree of freedoms of the residuals.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"F-value is a vector bf F where ","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"F_i = fracDelta dev_i times dof_resrss^2 times dof_i","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"For a single model, F-value is computed directly by the variance-covariance matrix (bf Sigma) and the coefficients (beta) of the model; the deviance is calculated backward. Each model_j corresponds to a factor f_j, i.e. id_XI_j = f_j.","category":"page"},{"location":"FixedEffectModels/","page":"AnovaFixedEffectModels","title":"AnovaFixedEffectModels","text":"Type I:\nFactors are sequentially added to the models, i.e. forall i j in 1 m i lt j implies id_X(i) leq id_X(j)\nCalculate the the upper factor of Cholesky factorization of bf Sigma^-1 and multiply with beta:  ```math  \\begin{aligned}      \\bf{\\Sigma}^{-1} &= \\bf{LU}\\\\\n     \\bf{f} &= \\bf{U}\\beta\\\\\n     Fj &= \\frac{\\sum{k \\in Ij}{fk^2}}{dof_j}  \\end{aligned}  ```\nType III:\nThe models are all model_n, the base models are models without each factors.    math  F_j = \\frac{\\beta_{I_j}^T \\bf{\\Sigma}_{I_j; I_j}^{-1} \\beta_{I_j}}{dof_j}","category":"page"},{"location":"AnovaMixedModels/#AnovaMixedModels.jl","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"","category":"section"},{"location":"AnovaMixedModels/","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"CurrentModule = AnovaMixedModels","category":"page"},{"location":"AnovaMixedModels/","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"Modules = [AnovaMixedModels]","category":"page"},{"location":"AnovaMixedModels/#ANOVA","page":"AnovaMixedModels.jl","title":"ANOVA","text":"","category":"section"},{"location":"AnovaMixedModels/","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"AnovaMixedModels.anova(::Val{:AnovaMixedModels})\nanova_lme","category":"page"},{"location":"AnovaMixedModels/#AnovaBase.anova-Tuple{Val{:AnovaMixedModels}}","page":"AnovaMixedModels.jl","title":"AnovaBase.anova","text":"anova(<models>...; test::Type{<: GoodnessOfFit}, <keyword arguments>)\nanova(test::Type{<: GoodnessOfFit}, <models>...; <keyword arguments>)\n\nAnalysis of variance.\n\nReturn AnovaResult{M, test, N}.\n\nmodels: model objects\nLinearMixedModel fitted by AnovaMixedModels.lme or fit(LinearMixedModel, ...)\nGeneralizedLinearMixedModel fitted by AnovaMixedModels.glme or fit(GeneralizedLinearMixedModel, ...)\nIf mutiple models are provided, they should be nested and the last one is the most saturated. The first model can also be the corresponding GLM object without random effects.\ntest: test statistics for goodness of fit. Available tests are LikelihoodRatioTest (LRT) and FTest. The default is based on the model type.\nLinearMixedModel: FTest for one model fit; LRT for nested models.\nGeneralizedLinearMixedModel: LRT for nested models.\n\nOther keyword arguments:\n\nWhen one model is provided:  \ntype type of anova (1 or 3). Default value is 1.\nadjust_sigma: whether adjust σ to match that of linear mixed-effect model fitted by REML. The result will be slightly deviated from that of model fitted by REML.\nWhen multiple models are provided:  \ncheck: allows to check if models are nested. Defalut value is true. Some checkers are not implemented now.\nisnested: true when models are checked as nested (manually or automatically). Defalut value is false. \n\nAlgorithm:\n\nF-test: \nNo deviance is computed. F-statistic is computed directly from variance-covariance matrix(vcov).\nType I:\nFirst, calculate f as the upper factor of Cholesky factorization of vcov⁻¹ * β.\nThen, for a factor that starts at ith row/column of vcov with n degree of freedom, the f-statistic is Σᵢⁱ⁺ⁿ⁻¹ fₖ²/n.\nType III: \nFor a factor occupying ith to jth row/column of vcov with n degree of freedom, f-statistic is (β[i:j]' * vcov[i:j, i:j]⁻¹ * β[i:j])/n.\nLRT:\nThe attribute deviance is -2loglikelihood for a linear mixed-effect model; deviance computed by Laplace approximation   or n-point adaptive Gauss-Hermite quadrature for a generalized linear mixed-effect model. \nFor the ith model, the likelihood ratio is defined as devianceᵢ₋₁ - devianceᵢ.\n\nFor fitting new models and conducting anova at the same time, see anova_lme for LinearMixedModel.\n\nnote: Note\nThe result with adjust_sigma will be slightly deviated from that of model fitted directly by REML.\n\nnote: Note\nFor the computation of degrees of freedom, please see calcdof.\n\n\n\n\n\n","category":"method"},{"location":"AnovaMixedModels/#AnovaMixedModels.anova_lme","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.anova_lme","text":"anova_lme(f::FormulaTerm, tbl; test::Type{<: GoodnessOfFit} = FTest, <keyword arguments>)\n\nanova_lme(test::Type{<: GoodnessOfFit}, f::FormulaTerm, tbl; <keyword arguments>)\n\nanova(test::Type{<: GoodnessOfFit}, ::Type{<: LinearMixedModel}, f::FormulaTerm, tbl;\n        type::Int = 1, \n        adjust_sigma::Bool = true, <keyword arguments>)\n\nANOVA for linear mixed-effect models.\n\nThe arguments f and tbl are Formula and DataFrame.\n\ntest: GoodnessOfFit. The default is FTest.\ntype: type of anova (1 or 3). Default value is 1.\nadjust_sigma: whether adjust σ to match that of linear mixed-effect model fitted by REML. The result will be slightly deviated from that of model fitted by REML.\n\nOther keyword arguments\n\nwts = []\ncontrasts = Dict{Symbol,Any}()\nprogress::Bool = true\nREML::Bool = true\n\nanova_lme generate a LinearMixedModel fitted with REML if applying FTest; otherwise, a model fitted with ML.\n\nnote: Note\nThe result with adjust_sigma will be slightly deviated from that of model fitted directly by REML.\n\n\n\n\n\n","category":"function"},{"location":"AnovaMixedModels/#Model-fit","page":"AnovaMixedModels.jl","title":"Model fit","text":"","category":"section"},{"location":"AnovaMixedModels/","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"AnovaMixedModels.nestedmodels(::Val{:AnovaMixedModels})\nlme\nglme","category":"page"},{"location":"AnovaMixedModels/#AnovaBase.nestedmodels-Tuple{Val{:AnovaMixedModels}}","page":"AnovaMixedModels.jl","title":"AnovaBase.nestedmodels","text":"nestedmodels(model::LinearMixedModel; null::Bool = true, <keyword arguments>)\n\nnestedmodels(::Type{LinearMixedModel}, f::FormulaTerm, tbl; null::Bool = true, wts = [], contrasts = Dict{Symbol, Any}(), verbose::Bool = false, REML::Bool = false)\n\nGenerate nested models from a model or formula and data. The null model will be an empty model if the keyword argument null is true (default).\n\n\n\n\n\n","category":"method"},{"location":"AnovaMixedModels/#AnovaMixedModels.lme","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.lme","text":"lme(f::FormulaTerm, tbl; wts, contrasts, progress, REML)\n\nAn alias for fit(LinearMixedModel, f, tbl; wts, contrasts, progress, REML).\n\n\n\n\n\n","category":"function"},{"location":"AnovaMixedModels/#AnovaMixedModels.glme","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.glme","text":"glme(f::FormulaTerm, tbl, d::Distribution, l::Link; kwargs...)\n\nAn alias for fit(GeneralizedLinearMixedModel, f, tbl, d, l; kwargs...)\n\n\n\n\n\n","category":"function"},{"location":"AnovaMixedModels/#Miscellaneous","page":"AnovaMixedModels.jl","title":"Miscellaneous","text":"","category":"section"},{"location":"AnovaMixedModels/","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.jl","text":"calcdof","category":"page"},{"location":"AnovaMixedModels/#AnovaMixedModels.calcdof","page":"AnovaMixedModels.jl","title":"AnovaMixedModels.calcdof","text":"calcdof(model::LinearMixedModel)\n\nCalculate degree of freedom of factors and residuals for linear mixed effect models DOF of residuals are estimated by between-within method: dofᵢ = nobsᵢ - dofᵢ₋₁ - nfixᵢ\n\nReference algorithm: GLMM FAQ for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaGLM/#AnovaGLM.jl","page":"AnovaGLM.jl","title":"AnovaGLM.jl","text":"","category":"section"},{"location":"AnovaGLM/","page":"AnovaGLM.jl","title":"AnovaGLM.jl","text":"CurrentModule = AnovaGLM","category":"page"},{"location":"AnovaGLM/","page":"AnovaGLM.jl","title":"AnovaGLM.jl","text":"Modules = [AnovaGLM]","category":"page"},{"location":"AnovaGLM/#ANOVA","page":"AnovaGLM.jl","title":"ANOVA","text":"","category":"section"},{"location":"AnovaGLM/","page":"AnovaGLM.jl","title":"AnovaGLM.jl","text":"AnovaGLM.anova(::Val{:AnovaGLM})\nanova_lm\nanova_glm","category":"page"},{"location":"AnovaGLM/#AnovaBase.anova-Tuple{Val{:AnovaGLM}}","page":"AnovaGLM.jl","title":"AnovaBase.anova","text":"anova(<models>...; test::Type{<: GoodnessOfFit},  <keyword arguments>)\nanova(test::Type{<: GoodnessOfFit}, <models>...;  <keyword arguments>)\n\nAnalysis of variance.\n\nReturn AnovaResult{M, test, N}. See AnovaResult for details.\n\nmodels: model objects\nTableRegressionModel{<: LinearModel} fitted by GLM.lm\nTableRegressionModel{<: GeneralizedLinearModel} fitted by GLM.glm\nIf mutiple models are provided, they should be nested and the last one is the most saturated.\ntest: test statistics for goodness of fit. Available tests are LikelihoodRatioTest (LRT) and FTest. The default is based on the model type.\nTableRegressionModel{<: LinearModel}: FTest.\nTableRegressionModel{<: GeneralizedLinearModel}: based on distribution function, see canonicalgoodnessoffit.\n\nOther keyword arguments:\n\nWhen one model is provided:  \ntype specifies type of anova (1, 2 or 3). Default value is 1.\nWhen multiple models are provided:  \ncheck: allows to check if models are nested. Defalut value is true. Some checkers are not implemented now.\nisnested: true when models are checked as nested (manually or automatically). Defalut value is false. \n\nAlgorithm:\n\nFor the ith model, devᵢ is defined as the sum of squared deviance residuals (unit deviance).  It is equivalent to the residual sum of squares for ordinary linear regression.\n\nF-test: \nThe attribute deviance is Δdevᵢ = devᵢ₋₁ - devᵢ.\nF-statistic is then defined as Δdevᵢ/(squared dispersion × degree of freedom).\nFor type I and III ANOVA, F-statistic is computed directly by the variAnce-covariance matrix(vcov) of the saturated model; the deviance is calculated backward.\nType I:\nFirst, calculate f as the upper factor of Cholesky factorization of vcov⁻¹ * β.\nThen, for a factor that starts at ith row/column of vcov with n degree of freedom, the f-statistic is Σᵢⁱ⁺ⁿ⁻¹ fₖ²/n.\nType III: \nFor a factor occupying ith to jth row/column of vcov with n degree of freedom, f-statistic is (β[i:j]' * vcov[i:j, i:j]⁻¹ * β[i:j])/n.\nLRT: \nThe attribute deviance is devᵢ.\nThe likelihood ratio is defined as (devᵢ₋₁ - devᵢ)/squared dispersion.\n\nFor fitting new models and conducting anova at the same time, see anova_lm for LinearModel, anova_glm for GeneralizedLinearModel.\n\n\n\n\n\n","category":"method"},{"location":"AnovaGLM/#AnovaGLM.anova_lm","page":"AnovaGLM.jl","title":"AnovaGLM.anova_lm","text":"anova_lm(X, y; test::Type{<: GoodnessOfFit} = FTest, <keyword arguments>) \n\nanova_lm(test::Type{<: GoodnessOfFit}, X, y; <keyword arguments>)\n\nanova(test::Type{<: GoodnessOfFit}, ::Type{LinearModel}, X, y; \n    type::Int = 1, \n    <keyword arguments>)\n\nANOVA for simple linear regression.\n\nThe arguments X and y can be a Matrix and a Vector or a Formula and a DataFrame. \n\ntype specifies type of anova (1, 2 or 3). Default value is 1.\ndropcollinear controls whether or not lm accepts a model matrix which is less-than-full rank. If true (the default), only the first of each set of linearly-dependent columns is used. The coefficient for redundant linearly dependent columns is 0.0 and all associated statistics are set to NaN.\n\nanova_lm generate a TableRegressionModel object, which is fitted by lm.\n\n\n\n\n\n","category":"function"},{"location":"AnovaGLM/#AnovaGLM.anova_glm","page":"AnovaGLM.jl","title":"AnovaGLM.anova_glm","text":"anova_glm(X, y, d::UnivariateDistribution, l::Link = canonicallink(d); \n        test::Type{<: GoodnessOfFit} = canonicalgoodnessoffit(d), <keyword arguments>)\n\nanova_glm(test::Type{<: GoodnessOfFit}, X, y, d::UnivariateDistribution, l::Link = canonicallink(d); <keyword arguments>)\n\nanova(test::Type{<: GoodnessOfFit}, X, y, d::UnivariateDistribution, l::Link = canonicallink(d); <keyword arguments>)\n\nANOVA for genaralized linear models.\n\nThe arguments X and y can be a Matrix and a Vector or a Formula and a DataFrame. \n\nd: a GLM.UnivariateDistribution.\nl: a GLM.Link\n\nFor other keyword arguments, see fit.\n\n\n\n\n\n","category":"function"},{"location":"AnovaGLM/#Model-fit","page":"AnovaGLM.jl","title":"Model fit","text":"","category":"section"},{"location":"AnovaGLM/","page":"AnovaGLM.jl","title":"AnovaGLM.jl","text":"AnovaGLM.nestedmodels(::Val{:AnovaGLM})\nGLM.glm(::FormulaTerm, ::DataFrame, ::Binomial, ::Link, ::Vararg{Any})","category":"page"},{"location":"AnovaGLM/#AnovaBase.nestedmodels-Tuple{Val{:AnovaGLM}}","page":"AnovaGLM.jl","title":"AnovaBase.nestedmodels","text":"nestedmodels(trm::TableRegressionModel{<: LinearModel}; null::Bool = true, <keyword arguments>)\nnestedmodels(trm::TableRegressionModel{<: GeneralizedLinearModel}; null::Bool = true, <keyword arguments>)\n\nnestedmodels(::Type{LinearModel}, formula, data; null::Bool = true, <keyword arguments>)\nnestedmodels(::Type{GeneralizedLinearModel}, formula, data, distr::UnivariateDistribution, link::Link = canonicallink(d); null::Bool = true, <keyword arguments>)\n\nGenerate nested models from a model or formula and data.\n\nThe null model will be a model with at least one factor (including intercept) if the link function does not allow factors to be 0 (factors in denominators) or the keyword argument null is false (default value is true).\n\nInverseLink for Gamma\nInverseSquareLink for InverseGaussian\nLinearModel fitted with CholeskyPivoted when dropcollinear = true\n\nOtherwise, it will be an empty model.\n\n\n\n\n\n","category":"method"},{"location":"AnovaGLM/#GLM.glm-Tuple{FormulaTerm, DataFrame, Binomial, Link, Vararg{Any}}","page":"AnovaGLM.jl","title":"GLM.glm","text":"GLM.glm(f::FormulaTerm, df::DataFrame, d::Binomial, l::GLM.Link, args...; kwargs...)\n\nAutomatically transform dependent variable into 0/1 for family Binomial.\n\n\n\n\n\n","category":"method"},{"location":"GLM/#AnovaGLM","page":"AnovaGLM","title":"AnovaGLM","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"using AnovaGLM, RDatasets, DataFrames\niris = dataset(\"datasets\", \"iris\")\nquine = dataset(\"MASS\", \"quine\")\nmtcars = dataset(\"datasets\", \"mtcars\")","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"To use anova on GLM objects , we need AnovaGLM.jl.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"using AnovaGLM","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"This function will export all functions from GLM and related function in this package, including anova, anova_lm, anova_glm.","category":"page"},{"location":"GLM/#Ordinary-linear-model","page":"AnovaGLM","title":"Ordinary linear model","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We first import the well-known iris dataset from RDatasets.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"iris = dataset(\"datasets\", \"iris\")","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"There's two way to perform ANOVA. anova_lm accepts a formula and data like GLM.lm.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"anova_lm(@formula(SepalLength ~ SepalWidth + PetalLength + PetalWidth + Species), iris)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We can specify the type of sum of squares by keyword argument type. Let's use type II SS.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"anova_lm(@formula(SepalLength ~ SepalWidth + PetalLength + PetalWidth + Species), iris, type = 2)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"A StatsModels.TableRegressionModel object is fitted and stored in the output of anova_lm.  ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We can fit a model first and call anova instead. anova store the model as well.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"warn: Warn\nIt doesn't create a copy, so any in-place change of the original model should be noticed. ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"lm1 = lm(@formula(SepalLength ~ SepalWidth + PetalLength + PetalWidth + Species), iris)\nanova(lm1, type = 3)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"Multiple models can be compared through the same function.  ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"note: Note\nThe checker for nested models is not implemented now, so it should be ensured that the later model is more complex than the previous one.  ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"lms = nestedmodels(LinearModel, @formula(SepalLength ~ SepalWidth * Species), iris, dropcollinear = false)\nanova(lms...)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"This result is a little bit different from GLM.ftest:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"ftest(getproperty.(lms[2:end], :model)...)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"In anova, the F value is calculated by dividing MSR (mean of ΔDeviance) with mean of RSS of the most complex model just like anova in R, while in GLM.ftest, the denominator is replaced by RSS of subsequent model.","category":"page"},{"location":"GLM/#Generalized-linear-models","page":"AnovaGLM","title":"Generalized linear models","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"quine = dataset(\"MASS\", \"quine\")","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We fit a negative binomial regression on quine dataset from MASS.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"nbm = glm(@formula(Days ~ Eth + Sex + Age + Lrn), quine, NegativeBinomial(2.0), LogLink())\nanova(nbm)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"There's also anova_glm similar to anova_lm.  ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"anova will automatically select test from F-test or likelihood-ratio test depending on the type of distribution. For distribution of Bernoulli(), Binomial(), Poisson() that have fixed dispersion, likelihood-ratio test is preferred. For other distribution, F-test is preferred.  ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The next one is an axample of logistic regression.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"mtcars = dataset(\"datasets\", \"mtcars\")","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We want to predict if the AM is 0 or 1. Let's use logistic regression with and without interaction terms, and compare this two models by likelihood-ratio test. ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"glm1 = glm(@formula(AM ~ Cyl + HP + WT), mtcars, Binomial(), LogitLink())\nglm2 = glm(@formula(AM ~ Cyl * HP * WT), mtcars, Binomial(), LogitLink())\nanova(glm1, glm2)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"lrtest(glm1, glm2)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"This function works identically as StatsModels.lrtest.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"note: Note\nWe can also specify test by keyword arguments test or putting test in the first argument.","category":"page"},{"location":"GLM/#Algorithm","page":"AnovaGLM","title":"Algorithm","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"There are vectors of models and the corresponding base models:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    bfmodel = (model_1  model_n)\n    bfbasemodel = (basemodel_1  basemodel_n)\nendaligned","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"When m models are given, bf model = (model_2  model_m), bf basemodel $ = (model1, ..., model{m-1})$. ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"When one model is given, n is the number of factors except for the factors used in the simplest model. The bf model and bf basemodel depends on the type of ANOVA.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"For the most complex model model_n, each factors are assigned a natural number f_k sequentially where f_l is the last factor.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"Let the number of columns of model matrix of model_n m.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The included factors of model_j and basemodel_j are","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    mf_j = i in 1 m  f_i text is a factor of  model_i\n    bf_j = i in 1 m  f_i text is a factor of  basemodel_i\nendaligned","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"A map id_X 1 m mapsto 1 f_l maps the index of columns into the corresponding factors.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"We can define a vector of index sets for each model:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"bfI = (I_1  I_n)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"where forall i in I_k id_X(i) in mf_ksetminus bf_k.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The deviances are:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    bfdev = (devres_1  devres_n)\n    bfbasedev = (basedevres_1  basedevres_n)\nendaligned","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"where devres_i and basedevres_i are the sum of squared deviance residuals (unit deviance) of model_i and basemodel_i.  It is equivalent to the residual sum of squares for ordinary linear regression.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The difference of bf dev and bf basedev is:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"bfDelta dev = basedev - dev","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The degree of freedom is:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"bfdof = (n(I_1)  n(I_n))","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"where n(I) is the size of I","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The sigma is the estimated dispersion (or scale) parameter for model_n's distribution","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"For ordinary linear regression, ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"sigma^2 =fractext residual sum of squarestextdegree of freedom of residuals","category":"page"},{"location":"GLM/#F-test","page":"AnovaGLM","title":"F-test","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"F-value is a vector bf F where ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    F_i = fracDelta dev_isigma^2 times dof_i\n    bfF sim mathcalF_bfdof dof_res\nendaligned","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"where dof_res is dof(textresiduals of  basemodel_n)","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"For a single model, F-value is computed directly by the variance-covariance matrix (bf Sigma) and the coefficients (beta) of the most complex model; the deviance is calculated backward. Each model_j corresponds to a factor f_j, i.e. id_XI_j = f_j.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"Type I:\nFactors are sequentially added to the models, i.e. forall i j in 1 m i lt j implies id_X(i) leq id_X(j)\nCalculate the the upper factor of Cholesky factorization of bf Sigma^-1 and multiply with beta:  ```math  \\begin{aligned}      \\bf{\\Sigma}^{-1} &= \\bf{LU}\\\\\n     \\bf{f} &= \\bf{U}\\beta\\\\\n     Fj &= \\frac{\\sum{k \\in Ij}{fk^2}}{dof_j}  \\end{aligned}  ```\nType II:\nFor each j, bf_j includes other factors irrevalent to f_j, i.e.   math  bf_j = \\{f_k in [1, f_l]\\, |\\, f_k \\text{ is not an interaction term of }f_j \\text{ and other terms}\\}  Define two vectors of index sets J and K where   math  \\begin{aligned}      J_j &= \\{i \\in [1, m]\\, |\\, id_X(i) \\text{ is an interaction term of }f_j \\text{ and other terms}\\}      K_j &= \\{i \\in [1, m]\\, |\\, id_X(i) \\text{ is an interaction term of }f_j \\text{ and other terms or } id_X(i) = f_j\\}  \\end{aligned}  F-value is:   math  F_j = \\frac{(\\beta_{K_j}^T \\bf{\\Sigma}_{K_j; K_j}^{-1} \\beta_{K_j} - \\beta_{J_j}^T \\bf{\\Sigma}_{J_j; J_j}^{-1} \\beta_{J_j})}{dof_j}\nType III:\nThe models are all model_n, the base models are models without each factors.  \nF-value is:  math  F_j = \\frac{\\beta_{I_j}^T \\bf{\\Sigma}_{I_j; I_j}^{-1} \\beta_{I_j}}{dof_j}","category":"page"},{"location":"GLM/#LRT","page":"AnovaGLM","title":"LRT","text":"","category":"section"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The likelihood ratio is defined as bf Delta dev  sigma^2. ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"When a single model is provided, lrt is computed directly by the variance-covariance matrix.","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"First, calculate the the upper factor of Cholesky factorization of sigma^2 bf Sigma^-1 and multiply with beta:","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    sigma^2 bfSigma^-1 = bfLU\n    bff = bfUbeta\nendaligned","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"The likelihood ratio is a vector bf LR where ","category":"page"},{"location":"GLM/","page":"AnovaGLM","title":"AnovaGLM","text":"beginaligned\n    LR_j = sum_k in I_jf_k^2\n    bfLR sim chi^2_bfdof\nendaligned","category":"page"},{"location":"MixedModels/#AnovaMixedModels","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"","category":"section"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"using AnovaMixedModels, DataFrames, GLM, CSV, CategoricalArrays\nanxiety = CSV.read(\"anxiety.csv\", DataFrame)\ntransform!(anxiety, :id => categorical, renamecols = false)\ntoenail = CSV.read(\"toenail.csv\", DataFrame)\ntransform!(toenail, [1, 2, 3] .=> categorical, renamecols = false)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"The implementation of ANOVA for mixed-effects models is primarily based on MixedModels. The syntax is similar to anova for GLM.   ","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"using AnovaMixedModels","category":"page"},{"location":"MixedModels/#Linear-mixed-effects-model","page":"AnovaMixedModels","title":"Linear mixed-effects model","text":"","category":"section"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"We get a dataset from R directly by RCall.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"R\"\"\"data(\"anxiety\", package = \"datarium\")\"\"\"\nanxiety = stack(rcopy(R\"anxiety\"), [:t1, :t2, :t3], [:id, :group], variable_name = :time, value_name = :score)\nanxiety = combine(anxiety, Not(:time), :time => ByRow(x->parse(Int, replace(String(x), \"t\"=>\"\"))) => :time)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"We can fit a linear mixed-effects model first. lme is an alias for fit(LinearMixedModel, formula, data, args...).","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"lmm1 = lme(@formula(score ~ group * time + (1|id)), anxiety)\nanova(lmm1)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Alternatively, we can use anova_lme. Like anova_lm, this function will fit and store a model; in this case, a LinearMixedModel fit by Restricted maximum likelihood.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"aov = anova_lme(@formula(score ~ group * time + (1|id)), anxiety, type = 3)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"aov.model.optsum.REML","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"note: Note\nType 2 sum of squares is not implemented now.  ","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"For likeihood-ratio test, all submodels are fitted. The model should be fitted by maximum likelihood estimation.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"anova(LRT, lmm1)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"When comparing multiple mixed models, likelihood-ratio test is used by default.  It's also identical to StatsModels.lrtest and MixedModels.likelihoodratiotest.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"lmms = nestedmodels(lmm1)\nanova(lmms...) # as same as anova(LRT, lmm1)\nMixedModels.likelihoodratiotest(lmms[2:end]...)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Comparing between LinearModel and LinearMixedModel is also available.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"lm1 = lm(@formula(score ~ group * time), anxiety)\nlmm2 = lme(@formula(score ~ group * time + (group|id)), anxiety)\nanova(lm1, lmm1, lmm2)","category":"page"},{"location":"MixedModels/#Generalized-linear-mixed-effects-model","page":"AnovaMixedModels","title":"Generalized linear mixed-effects model","text":"","category":"section"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"The following is an example of generalized mixed model. glme is an alias for fit(GeneralizedLinearMixedModel, formula, data, args...).","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"R\"\"\"data(\"toenail\", package = \"HSAUR2\")\"\"\"\ntoenail = rcopy(R\"toenail\")","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"glmm1 = glme(@formula(outcome ~ visit + treatment + (1|patientID)), toenail, Binomial(), LogitLink(), nAGQ = 20, wts = ones(Float64, size(toenail, 1)));\nglmm2 = glme(@formula(outcome ~ visit * treatment + (1|patientID)), toenail, Binomial(), LogitLink(), nAGQ = 20, wts = ones(Float64, size(toenail, 1)));\nglm1 = glm(@formula(outcome ~ visit + treatment), toenail, Binomial(), LogitLink());\nanova(glm1, glmm1, glmm2)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"note: Note\nOnly likelihood-ratio test is available now for GeneralizedLinearMixedModel.","category":"page"},{"location":"MixedModels/#Algorithm","page":"AnovaMixedModels","title":"Algorithm","text":"","category":"section"},{"location":"MixedModels/#F-test","page":"AnovaMixedModels","title":"F-test","text":"","category":"section"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Given a model, n is the number of factors. Each factors are assigned a natural number f_k sequentially.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Let the number of columns of model matrix of model m.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"A map id_X 1 m mapsto 1 n maps the index of columns into the corresponding factors.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"We can define a vector of index set for each factors:","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"bfI = (I_1  I_n)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"where forall i in I_k id_X(i) = f_k.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"The degree of freedom is:","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"bfdof = (n(I_1)  n(I_n))","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"where n(I) is the size of I","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"F-value is a vector bf F","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"bfF sim mathcalF_bfdof bfdof_res","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"where bf dof_res is estimated by between-within method.","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"F-value is computed directly by the variance-covariance matrix (bf Sigma) and the coefficients (beta) of the model. ","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Type I:\nFactors are sequentially added to the models, i.e. forall i j in 1 m i lt j implies id_X(i) leq id_X(j)\nCalculate the the upper factor of Cholesky factorization of bf Sigma^-1 and multiply with beta:  ```math  \\begin{aligned}      \\bf{\\Sigma}^{-1} &= \\bf{LU}\\\\\n     \\bf{f} &= \\bf{U}\\beta\\\\\n     Fj &= \\frac{\\sum{k \\in Ij}{fk^2}}{dof_j}  \\end{aligned}  ```\nType III:\nmath  F_j = \\frac{\\beta_{I_j}^T \\bf{\\Sigma}_{I_j; I_j}^{-1} \\beta_{I_j}}{dof_j}","category":"page"},{"location":"MixedModels/#LRT","page":"AnovaMixedModels","title":"LRT","text":"","category":"section"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"Given a vector of models:","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"bfmodel = (model_1  model_n)","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"The bf dev is a vector of loglikelihoods -2loglikelihood(model_i) for a linear mixed-effect model (linear model); unit deviance for a generalized linear mixed-effect model (generalized linear model).","category":"page"},{"location":"MixedModels/","page":"AnovaMixedModels","title":"AnovaMixedModels","text":"The likelihood ratio bf LR is defined as bf dev_1 n - 1 - dev_2 n and bf LR sim chi^2_bfdof where dof_i = dof(model_i) - dof(model_i+1)","category":"page"},{"location":"#AnovaBase.jl-Documentation","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"AnovaBase.jl is a Julia package providing a simple framework for Analysis of Varaincae (ANOVA) on various types of julia statistical models. It is similar to function anova in R.","category":"page"},{"location":"#Functionality-overview","page":"AnovaBase.jl Documentation","title":"Functionality overview","text":"","category":"section"},{"location":"#anova","page":"AnovaBase.jl Documentation","title":"anova","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"anova(<model>; <type>, <test>)\nanova(<test>, <model>; <type>)\nanova(<models>; <test>)\nanova(<test>, <models>)\n\nanova_lm(<formula>, <data>; <type>, <test>)\nanova_lm(<test>, <formula>, <data>; <type>)\nanova_glm(<formula>, <data>, <distr>, <link>; <type>, <test>)\nanova_glm(<test>, <formula>, <data>, <distr>, <link>; <type>)\nanova_lme(<formula>, <data>; <type>, <test>)\nanova_lme(<test>, <formula>, <data>; <type>)\nanova_lfe(<formula>, <data>, <vcov>; <type>, <test>)\nanova_lfe(<test>, <formula>, <data>, <vcov>; <type>)","category":"page"},{"location":"#nestedmodels","page":"AnovaBase.jl Documentation","title":"nestedmodels","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"nestedmodels(<modeltype>, <formula>, <data>)\nnestedmodels(<model>)","category":"page"},{"location":"#Usage","page":"AnovaBase.jl Documentation","title":"Usage","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"This package is not intentded to be used directly. Use the following packages for different models:","category":"page"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"Packages for models Packages for ANOVA Models Fited by\nGLM.jl AnovaGLM.jl TableRegressionModel{<: LinearModel} GLM.lm or fit(LinearModel, ...)\n  TableRegressionModel{<: GeneralizedLinearModel} GLM.glm or fit(GeneralizedLinearModel, ...)\nMixedModels.jl AnovaMixedModels.jl LinearMixedModel AnovaMixedModels.lme or fit(LinearMixedModel, ...)\n  GeneralizedLinearMixedModel AnovaGLM.glme or fit(GeneralizedLinearMixedModel, ...)\nFixedEffectModels.jl AnovaFixedEffectModels.jl TableRegressionModel{<: FixedEffectModel} AnovaFixedEffectModels.lfe","category":"page"},{"location":"#Tests-for-Goodness-of-Fit","page":"AnovaBase.jl Documentation","title":"Tests for Goodness of Fit","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"FTest: F-test\nLikelihoodRatioTest, LRT: likelihood-ratio test","category":"page"},{"location":"#Types-of-Estimable-Functions","page":"AnovaBase.jl Documentation","title":"Types of Estimable Functions","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"Type I, II, III SS  are supported. ","category":"page"},{"location":"#Table-of-Contents","page":"AnovaBase.jl Documentation","title":"Table of Contents","text":"","category":"section"},{"location":"#Examples","page":"AnovaBase.jl Documentation","title":"Examples","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"Pages = [\n    \"GLM.md\",\n    \"MixedModels.md\",\n    \"FixedEffectModels.md\"\n]\nDepth = 2","category":"page"},{"location":"#API","page":"AnovaBase.jl Documentation","title":"API","text":"","category":"section"},{"location":"","page":"AnovaBase.jl Documentation","title":"AnovaBase.jl Documentation","text":"Pages = [\n    \"AnovaGLM.md\",\n    \"AnovaMixedModels.md\",\n    \"AnovaFixedEffectModels.md\"\n]","category":"page"},{"location":"AnovaBase/#AnovaBase.jl","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"CurrentModule = AnovaBase","category":"page"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"Modules = [AnovaBase]\nOrder   = [:type, :function]","category":"page"},{"location":"AnovaBase/#Type","page":"AnovaBase.jl","title":"Type","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"Modules = [AnovaBase]\nOrder   = [:type]\nPrivate = false","category":"page"},{"location":"AnovaBase/#AnovaBase.AnovaResult","page":"AnovaBase.jl","title":"AnovaBase.AnovaResult","text":"AnovaResult{M, T, N}\n\nReturned object of anova.\n\nM is a subtype of Tuple if multiple models are provided; otherwise, a typeof model.\nT is a subtype of GoodnessOfFit; either FTest or LRT.\nN is the length of parameters.\n\nFields\n\nmodel: full model or tuple of tested models.\ntype: type of anova.\ndof: degree of freedoms of models or factors.\ndeviance: deviance(s) for calculating test statistics. See deviance for more details.\nteststat: value(s) of test statiscics.\npval: p-value(s) of test statiscics.\ntests: NamedTuple contained extra statistics.\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.FTest","page":"AnovaBase.jl","title":"AnovaBase.FTest","text":"struct FTest <: GoodnessOfFit end\n\nANOVA by F-test. It can be the first argument or keyword argument test.\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.GoodnessOfFit","page":"AnovaBase.jl","title":"AnovaBase.GoodnessOfFit","text":"abstract type GoodnessOfFit end\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.LRT","page":"AnovaBase.jl","title":"AnovaBase.LRT","text":"const LRT = LikelihoodRatioTest\n\nSee LikelihoodRatioTest.\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.LikelihoodRatioTest","page":"AnovaBase.jl","title":"AnovaBase.LikelihoodRatioTest","text":"struct LikelihoodRatioTest <: GoodnessOfFit end\nconst LRT = LikelihoodRatioTest\n\nANOVA by likelihood-ratio test. It can be the first argument or keyword argument test.\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#ANOVA","page":"AnovaBase.jl","title":"ANOVA","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"AnovaBase.anova","category":"page"},{"location":"AnovaBase/#AnovaBase.anova","page":"AnovaBase.jl","title":"AnovaBase.anova","text":"anova(<models>...; test::Type{<: GoodnessOfFit})\nanova(test::Type{FTest}, <model>; <keyword arguments>)\nanova(test::Type{FTest}, <models>...; <keyword arguments>)\nanova(test::Type{LRT}, <model>; <keyword arguments>)\nanova(test::Type{LRT}, <models>...; <keyword arguments>)\n\nAnalysis of variance.\n\nReturn AnovaResult{M, test, N}. See AnovaResult for details.\n\nmodels: model objects. If mutiple models are provided, they should be nested and the last one is the most complex.\ntest: test statistics for goodness of fit. Available tests are LikelihoodRatioTest (LRT) and FTest.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#Model-fit","page":"AnovaBase.jl","title":"Model fit","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"AnovaBase.nestedmodels","category":"page"},{"location":"AnovaBase/#AnovaBase.nestedmodels","page":"AnovaBase.jl","title":"AnovaBase.nestedmodels","text":"nestedmodels(<model>; <keyword arguments>)\nnestedmodels(<model type>, formula, data, <keyword arguments>)\n\nGenerate nested models from a model or formula and data.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#Attributes","page":"AnovaBase.jl","title":"Attributes","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"AnovaBase.formula\nAnovaBase.anova_test\nAnovaBase.anova_type\nAnovaBase.pval\nAnovaBase.teststat\nAnovaBase.coefnames\nAnovaBase.deviance\nAnovaBase.dof(::AnovaResult)\nAnovaBase.dof_residual\nAnovaBase.nobs","category":"page"},{"location":"AnovaBase/#AnovaBase.formula","page":"AnovaBase.jl","title":"AnovaBase.formula","text":"formula(model)\nformula(trm::TableRegressionModel)\n\nUnified api for formula of each statistical model. For a trm::TableRegressionModel, formula is trm.mf.f. \n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.anova_test","page":"AnovaBase.jl","title":"AnovaBase.anova_test","text":"anova_test(::AnovaResult)\n\nTest statiscics of anova. See AnovaResult for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.anova_type","page":"AnovaBase.jl","title":"AnovaBase.anova_type","text":"anova_type(aov::AnovaResult)\n\nType of anova. See AnovaResult for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.pval","page":"AnovaBase.jl","title":"AnovaBase.pval","text":"teststat(aov::AnovaResult)\n\nP-values of test statiscics of anova. See AnovaResult for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.teststat","page":"AnovaBase.jl","title":"AnovaBase.teststat","text":"teststat(aov::AnovaResult)\n\nValues of test statiscics of anova. See AnovaResult for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#StatsAPI.coefnames","page":"AnovaBase.jl","title":"StatsAPI.coefnames","text":"coefnames(aov::AnovaResult)\ncoefnames(<model>, anova::Val{:anova})\n\nCustomize coefnames for ANOVA. The default method for RegressionModel is applying coefnames on the right hand side of formula.\n\n\n\n\n\ncoefnames(<term>, anova::Val{:anova})\n\nCustomize coefnames for ANOVA.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#StatsAPI.deviance","page":"AnovaBase.jl","title":"StatsAPI.deviance","text":"deviance(aov::AnovaResult)\n\nReturn the stored devaince. The value repressents different statistics for different models and tests.  It may be deviance, Δdeviance, -2loglikelihood or other measures of model performance.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#StatsAPI.dof-Tuple{AnovaResult}","page":"AnovaBase.jl","title":"StatsAPI.dof","text":"dof(aov::AnovaResult)\n\nDegree of freedom of models or factors.\n\n\n\n\n\n","category":"method"},{"location":"AnovaBase/#StatsAPI.dof_residual","page":"AnovaBase.jl","title":"StatsAPI.dof_residual","text":"dof_residual(aov::AnovaResult{<: Tuple})\ndof_residual(aov::AnovaResult)\ndof_residual(aov::AnovaResult{<: MixedModel, FTest})\n\nDegree of freedom of residuals.\n\nDefault is applying dof_residual to models in aov.model.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#StatsAPI.nobs","page":"AnovaBase.jl","title":"StatsAPI.nobs","text":"nobs(aov::AnovaResult{<: Tuple})\nnobs(aov::AnovaResult)\n\nApply nobs to all models in aov.model. See AnovaResult for details.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#Developer-utility","page":"AnovaBase.jl","title":"Developer utility","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"AnovaBase.ftest_nested\nAnovaBase.lrt_nested\nAnovaBase.dof(::Vector{Int})\nAnovaBase.canonicalgoodnessoffit\nAnovaBase.isinteract\nAnovaBase.select_super_interaction\nAnovaBase.select_not_super_interaction\nAnovaBase.select_sub_interaction\nAnovaBase.select_not_sub_interaction\nAnovaBase.subformula\nAnovaBase.getterms\nAnovaBase.clearschema\nAnovaBase.extract_contrasts\nAnovaBase._diff\nAnovaBase._diffn","category":"page"},{"location":"AnovaBase/#AnovaBase.ftest_nested","page":"AnovaBase.jl","title":"AnovaBase.ftest_nested","text":"ftest_nested(models::NTuple{N, RegressionModel}, df, dfr, dev, σ²) where N\n\nCalculate F-statiscics and p-values based on given parameters.\n\nmodels: nested models \ndf: degrees of freedoms of each models\ndfr: degrees of freedom of residuals of each models\ndev: deviances of each models\nσ²: squared dispersion of each models\n\nF-statiscic is (devᵢ - devᵢ₋₁) / (dfᵢ₋₁ - dfᵢ) / σ² for the ith factor.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.lrt_nested","page":"AnovaBase.jl","title":"AnovaBase.lrt_nested","text":"lrt_nested(models::NTuple{N, RegressionModel}, df, dev, σ²) where N\n\nCalculate likelihood ratio and p-values based on given parameters.\n\nmodels: nested models \ndf: degrees of freedoms of each models\ndev: deviances of each models\nσ²: squared dispersion of each models\n\nThe likelihood ratio of the ith factor is LRᵢ = (devᵢ - devᵢ₋₁) / σ².\n\nIf dev is alternatively -2loglikelihood, σ² should be 1.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#StatsAPI.dof-Tuple{Vector{Int64}}","page":"AnovaBase.jl","title":"StatsAPI.dof","text":"dof(v::Vector{Int})\n\nCalculate degrees of freedom of each predictors. For a given trm::RegressionModel, v is from trm.mm.assign and must be a non-decreasing array of integers.\n\n\n\n\n\n","category":"method"},{"location":"AnovaBase/#AnovaBase.canonicalgoodnessoffit","page":"AnovaBase.jl","title":"AnovaBase.canonicalgoodnessoffit","text":"canonicalgoodnessoffit(::FixDispDist) = LRT\ncanonicalgoodnessoffit(::UnivariateDistribution) = FTest\n\nconst FixDispDist = Union{Bernoulli, Binomial, Poisson}\n\nReturn LRT if the distribution has a fixed dispersion.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.isinteract","page":"AnovaBase.jl","title":"AnovaBase.isinteract","text":"isinteract(f::MatrixTerm, id1::Int, id2::Int)\n\nDetermine if f.terms[id2] is an interaction term of f.terms[id1] and other terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.select_super_interaction","page":"AnovaBase.jl","title":"AnovaBase.select_super_interaction","text":"select_super_interaction(f::MatrixTerm, id::Int)\n\nReturn a set of index of f.terms which are interaction terms of f.terms[id] and other terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.select_not_super_interaction","page":"AnovaBase.jl","title":"AnovaBase.select_not_super_interaction","text":"select_not_super_interaction(f::MatrixTerm, id::Int)\n\nReturn a set of index of f.terms which are not interaction terms of f.terms[id] and other terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.select_sub_interaction","page":"AnovaBase.jl","title":"AnovaBase.select_sub_interaction","text":"select_sub_interaction(f::MatrixTerm, id::Int)\n\nReturn a set of index of f.terms which f.terms[id] are interaction terms of those terms and other terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.select_not_sub_interaction","page":"AnovaBase.jl","title":"AnovaBase.select_not_sub_interaction","text":"select_not_interaction(f::MatrixTerm, id::Int)\n\nReturn a set of index of f.terms which f.terms[id] are not interaction terms of those terms and other terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.subformula","page":"AnovaBase.jl","title":"AnovaBase.subformula","text":"subformula(lhs::AbstractTerm, rhs::MatrixTerm, id::Int; reschema::Bool = false)\nsubformula(lhs::AbstractTerm, rhs::MatrixTerm, id; reschema::Bool = false)\nsubformula(lhs::AbstractTerm, rhs::NTuple{N, AbstractTerm}, id::Int)\n\nCreate formula from existing lhs and rhs truncated to 1:id or excluded collection id.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.getterms","page":"AnovaBase.jl","title":"AnovaBase.getterms","text":"getterms(<term>)\n\nGet an array of Expr or Symbol of terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.clearschema","page":"AnovaBase.jl","title":"AnovaBase.clearschema","text":"clearschema(<terms with schema>) = <terms without schema>\n\nClear any applied schema on terms.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.extract_contrasts","page":"AnovaBase.jl","title":"AnovaBase.extract_contrasts","text":"extract_contrasts(f::FormulaTerm)\n\nExtract a dictionary of contrasts.\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase._diff","page":"AnovaBase.jl","title":"AnovaBase._diff","text":"_diff(t::NTuple)\n\nReturn a tuple of difference between adjacent elements of a tuple(later - former). \n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase._diffn","page":"AnovaBase.jl","title":"AnovaBase._diffn","text":"_diff(t::NTuple)\n\nReturn a tuple of difference between adjacent elements of a tuple(former - later). \n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#IO-interface","page":"AnovaBase.jl","title":"IO interface","text":"","category":"section"},{"location":"AnovaBase/","page":"AnovaBase.jl","title":"AnovaBase.jl","text":"AnovaBase.anovatable\nAnovaBase.TestStat\nAnovaBase.PValue\nAnovaBase.OtherStat\nAnovaBase.NoQuote","category":"page"},{"location":"AnovaBase/#AnovaBase.anovatable","page":"AnovaBase.jl","title":"AnovaBase.anovatable","text":"anovatable(aov::AnovaResult{<: RegressionModel}; kwargs...)\nanovatable(aov::AnovaResult{<: Tuple}, modeltype1, modeltype2; kwargs...)\n\nReturn a table with coefficients and related statistics of ANOVA. For nested models, the function will dispatch on the types of the first and the last models. For a single model, no default api was implemented.\n\nThe returned AnovaTable object implements the Tables.jl (https://github.com/JuliaData/Tables.jl/) interface, and can be   converted e.g. to a DataFrame via using DataFrames; DataFrame(anovatable(aov)).\n\n\n\n\n\n","category":"function"},{"location":"AnovaBase/#AnovaBase.TestStat","page":"AnovaBase.jl","title":"AnovaBase.TestStat","text":"Show a test statistic using 2 decimal digits\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.PValue","page":"AnovaBase.jl","title":"AnovaBase.PValue","text":"Show a p-value using 6 characters, either using the standard 0.XXXX representation or as <Xe-YY.\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.OtherStat","page":"AnovaBase.jl","title":"AnovaBase.OtherStat","text":"Filter NaN\n\n\n\n\n\n","category":"type"},{"location":"AnovaBase/#AnovaBase.NoQuote","page":"AnovaBase.jl","title":"AnovaBase.NoQuote","text":"Wrap a string so that show omits quotes\n\n\n\n\n\n","category":"type"}]
}
